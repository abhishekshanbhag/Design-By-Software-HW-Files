// AUTHOR hari saran chhari@bu.edu
#include <iostream>
#include <vector>
#include <string>

using namespace std;

typedef string BigInt;
typedef vector<int> Poly;

BigInt multiply_int(const BigInt &a,const BigInt &b)
{
    Poly c;
    Poly d;
    Poly result2;
    
    c.resize(a.size(),0);
    d.resize(b.size(),0);
    result2.resize((a.size() + b.size() - 1), 0);
    BigInt result;
   
    for(int i=0; i < a.size() ; i++)
    {   
        c[i] = int(a[i] - '0');      
    }
    for(int i=0; i < b.size() ; i++)
    {
        d[i] = int(b[i] - '0');
    }
    for(int i = 0;i < a.size();i++)
    {   
         for(int j = 0; j < b.size();j++)
        {       
            result2[i+j] += c[i]*d[j];
   
        }
    }
    for(int i=0;i < result2.size() - 1;i++)
    {
        if (result2[i+1] > 9)
        {   
           
     	   result2[i+1] = result2[i+1]%10;
     	   result2[i] += result2[i+1]/10;
           
        }      	
    }
    for(int i=0;i < result2.size();i++)
    {
        result[i] = char(result2[i]) + '0';
    }
    return result;
}

void print_big(BigInt c)
{
	for(int i = 0; i<c.size(); i++)
	{
		cout<<c[i]<<"a";
		
	}
	cout<<endl;
}

int main()
{

  BigInt A,B;

  A = "1111";
  B = "1111";
  BigInt c = multiply_int(A,B);
  cout <<c;
  print_big(c);
}
